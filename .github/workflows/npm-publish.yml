name: Node.js Package

on:
  push:
    branches:
      - main

jobs:
  build-and-publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
          scope: abcdpackage
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Set SHAs
        uses: nrwl/nx-set-shas@v4
      - name: Install root dependencies
        run: pnpm install
      - name: Set affected libs
        id: set-affected-libs
        run: echo "AFFECTED_LIBS=$(pnpm nx show projects --affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --t=build --exclude=@abcdpackage/source)" >> "$GITHUB_OUTPUT"
      - name: Install dependencies and update package versions
        shell: bash {0}
        run: |
          echo ${{ steps.set-affected-libs.outputs.AFFECTED_LIBS }}
          for lib in ${{ steps.set-affected-libs.outputs.AFFECTED_LIBS }}
          do 
            cd $lib
            npm version patch
            echo "$lib=$(npm pkg get version)"
            pnpm install
            cd ../
          done
      - name: push new version commits
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git status
          git commit -m "update package versions"
          git push origin main
      - name: lint and build all affected projects
        run: pnpm nx affected -t lint --fix -t build --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --exclude=@abcdpackage/source
      - name: publish npm packages
        run: | 
          for lib in ${{ steps.set-affected-libs.outputs.AFFECTED_LIBS }}
          do
            cd dist/$lib
            npm publish --access=public
            cd ../
          done
